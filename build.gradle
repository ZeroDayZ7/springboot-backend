plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.app'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(25)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Data JPA (ORM)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Baza danych â€“ H2 (dev) + MySQL (prod)
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j:9.4.0'
	// Validation (DTO + @Valid)
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Spring Security (sesje + logowanie)
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// Logowanie
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.apache.commons:commons-text:1.14.0'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.2.2'
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:8.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.1.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
